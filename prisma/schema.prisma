// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ClipFormat {
  h265
  h264
}

enum UploadTaskType {
  clip
  snapshot
}

enum ConnectionStatus {
  CONNECTED
  DISCONNECTED
  UNKNOWN
}

model Gateway {
  // ID of the gateway autogenerated
  id String @id @default(uuid()) @db.Uuid

  // Optional name
  name String? @unique

  // Gateway timezone
  timezone String @default("UTC")

  // something like http://test.ccprxy.com or https://awesome.ccprxy.com
  connectionURL String

  // Token used to authenticate against the gateway's API
  connectionToken String

  // Is gateway currently online
  status ConnectionStatus @default(UNKNOWN)

  // When this gateway last connected
  lastConnection DateTime?

  // Relationships
  cameras   Camera[]
  clips     Clip[]
  snapshots Snapshot[]
}

// Very similar to the gateway camera but just at a higher level
model Camera {
  // ID of camera autogenerated
  id String @id @default(uuid()) @db.Uuid

  // Camera can stream
  stream Boolean @default(true)

  // Camera can record
  record Boolean @default(true)

  // Readable camera name
  name String

  clips Clip[]

  snapshots Snapshot[]

  // Camera timezone
  timezone String @default("UTC")

  // Represents the amount of hours transpire before a clip is deleted
  deleteClipAfter Int @default(72)

  // Represents the amount of hours transpire before a snapshot is deleted
  deleteSnapshotAfter Int @default(72)

  // Is camera currently online
  status ConnectionStatus @default(UNKNOWN)

  // When this camera last connected
  lastConnection DateTime?

  // Gateway this  camera belongs to
  gateway   Gateway? @relation(fields: [gatewayID], references: [id])
  gatewayID String?  @db.Uuid

  synchronized Boolean @default(false)
}

model Snapshot {
  // ID of the snapshot which is just the S3 key
  id String @id

  // Snapshot timezone
  timezone String @default("UTC")

  // Snapshot file name on disk
  fileName String

  // Snapshot file size on disk
  fileSize Int

  // Snapshot width
  width Int

  // Snapshot height
  height Int

  // Timestamp of when the snapshot was taken
  timestamp DateTime @default(now())

  // Represents the amount of hours transpire before a snapshot is deleted
  deleteAfter Int @default(72)

  // Camera relationship
  camera   Camera? @relation(fields: [cameraID], references: [id], onDelete: Cascade)
  cameraID String? @db.Uuid

  // Gateway relationship
  gateway   Gateway? @relation(fields: [gatewayID], references: [id])
  gatewayID String?  @db.Uuid
}

model Clip {
  // ID of the clip which is just the S3 key
  id String @id

  // Clip timezone
  timezone String @default("UTC")

  // Clip file name on S3
  fileName String

  // Clip file size on S3
  fileSize Int

  // Clip width
  width Int

  // Clip height
  height Int

  // Clip duration
  duration Int

  // Clip's file format
  format ClipFormat @default(h265)

  // Represents clip start
  start DateTime @default(now())

  // Represents clip end
  end DateTime?

  // Represents the amount of hours transpire before a clip is deleted
  deleteAfter Int @default(72)

  // Camera relationship
  camera   Camera? @relation(fields: [cameraID], references: [id], onDelete: Cascade)
  cameraID String? @db.Uuid

  // Gateway relationship
  gateway   Gateway? @relation(fields: [gatewayID], references: [id])
  gatewayID String?  @db.Uuid
}
