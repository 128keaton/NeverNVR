// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CameraMode {
  RECORD
  VIEW
}

enum ClipFormat {
  H265
  H264
}

model Camera {
  // ID of camera autogenerated
  id String @id @default(uuid()) @db.Uuid

  // Optional camera name
  name String? @unique

  // Expects an IP address or hostname
  host String @unique

  // Expects an RSTP stream URL
  streamURL String?

  // Expects a JPEG snapshot URL
  snapshotURL String?

  // Optional authentication
  username String?
  password String?

  // True/false depending on if the camera is actively recording
  recording Boolean @default(false)

  // True/false depending on if the camera is reachable via ping
  active Boolean @default(false)

  // Camera mode can either be RECORD or VIEW
  mode CameraMode @default(RECORD)

  // Camera timezone
  timezone String @default("UTC")

  // Represents the amount of hours transpire before a clip is deleted
  deleteClipAfter Int @default(72)

  // Represents the amount of hours transpire before a snapshot is deleted
  deleteSnapshotAfter Int @default(72)

  // Represents the amount of seconds for segmenting clips generated by this camera
  segmentTime Int @default(60)

  // Camera ONVIF url
  onvifURL String?

  // Camera ONVIF authentication
  onvifUsername String?
  onvifPassword String?

  // Clips recorded
  clips Clip[]

  // Snapshots taken
  snapshots Snapshot[]

  // Last successful ping
  lastPing DateTime?

  streamingPID Int?
  recordingPID Int?
}

model Snapshot {
  // ID of the snapshot autogenerated
  id String @id @default(uuid()) @db.Uuid

  // Snapshot timezone
  timezone String @default("UTC")

  // Snapshot file name on disk
  fileName String

  // Snapshot file size on disk
  fileSize Int

  // Snapshot width
  width Int

  // Snapshot height
  height Int

  // Timestamp of when the snapshot was taken
  timestamp DateTime @default(now())

  // Represents the amount of hours transpire before a snapshot is deleted
  deleteAfter Int @default(72)

  // Camera relationship
  camera   Camera? @relation(fields: [cameraID], references: [id], onDelete: Cascade)
  cameraID String? @db.Uuid
}

model Clip {
  // ID of the clip autogenerated
  id String @id @default(uuid()) @db.Uuid

  // Clip timezone
  timezone String @default("UTC")

  // Clip file name on disk
  fileName String

  // Clip file size on disk
  fileSize Int

  // Clip width
  width Int

  // Clip height
  height Int

  // Clip duration
  duration Int

  // Clip's file format
  format ClipFormat @default(H265)

  // Represents clip start
  start DateTime @default(now())

  // Represents clip end
  end DateTime?

  // Represents the amount of hours transpire before a clip is deleted
  deleteAfter Int @default(72)

  // Camera relationship
  camera   Camera? @relation(fields: [cameraID], references: [id], onDelete: Cascade)
  cameraID String? @db.Uuid

  // Is clip processing
  processing Boolean @default(true)
}
